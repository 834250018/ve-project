<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ve.user.dal.mapper.UserLoginMapper">

    <resultMap type="cn.ve.user.dal.entity.UserLogin" id="UserLoginMap">
        <result property="id" column="id" jdbcType="BIGINT"/>
        <result property="creatorId" column="creator_id" jdbcType="BIGINT"/>
        <result property="updaterId" column="updater_id" jdbcType="BIGINT"/>
        <result property="creatorName" column="creator_name" jdbcType="VARCHAR"/>
        <result property="updaterName" column="updater_name" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="deleted" column="deleted" jdbcType="INTEGER"/>
        <result property="versions" column="versions" jdbcType="INTEGER"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="loginType" column="login_type" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="salt" column="salt" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="baseSql">
        select id,
               creator_id,
               updater_id,
               creator_name,
               updater_name,
               create_time,
               update_time,
               deleted,
               versions,
               remark,
               user_id,
               login_type,
               username,
               password,
               salt
        from public.user_login
    </sql>

    <!--查询单个-->
    <select id="queryById" resultMap="UserLoginMap">
        <include refid="baseSql"/>
        where id = #{id}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserLoginMap">
        <include refid="baseSql"/>
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="creatorId != null">
                and creator_id = #{creatorId}
            </if>
            <if test="updaterId != null">
                and updater_id = #{updaterId}
            </if>
            <if test="creatorName != null and creatorName != ''">
                and creator_name = #{creatorName}
            </if>
            <if test="updaterName != null and updaterName != ''">
                and updater_name = #{updaterName}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="deleted != null">
                and deleted = #{deleted}
            </if>
            <if test="versions != null">
                and versions = #{versions}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="loginType != null">
                and login_type = #{loginType}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="salt != null and salt != ''">
                and salt = #{salt}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into public.user_login("id", "creator_id", "updater_id", "creator_name", "updater_name", "create_time",
                                      "update_time", "deleted", "versions", "remark", "user_id", "login_type",
                                      "username", "password", "salt")
        values (#{id}, #{creatorId}, #{updaterId}, #{creatorName}, #{updaterName}, #{createTime}, #{updateTime},
                #{deleted}, #{versions}, #{remark}, #{userId}, #{loginType}, #{username}, #{password}, #{salt})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update public.user_login
        <set>
            <if test="creatorId != null">
                "creator_id" = #{creatorId},
            </if>
            <if test="updaterId != null">
                "updater_id" = #{updaterId},
            </if>
            <if test="creatorName != null">
                "creator_name" = #{creatorName},
            </if>
            <if test="updaterName != null">
                "updater_name" = #{updaterName},
            </if>
            <if test="createTime != null">
                "create_time" = #{createTime},
            </if>
            <if test="updateTime != null">
                "update_time" = #{updateTime},
            </if>
            <if test="deleted != null">
                "deleted" = #{deleted},
            </if>
            <if test="versions != null">
                "versions" = #{versions},
            </if>
            <if test="remark != null">
                "remark" = #{remark},
            </if>
            <if test="userId != null">
                "user_id" = #{userId},
            </if>
            <if test="loginType != null">
                "login_type" = #{loginType},
            </if>
            <if test="username != null">
                "username" = #{username},
            </if>
            <if test="password != null">
                "password" = #{password},
            </if>
            <if test="salt != null">
                "salt" = #{salt},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--逻辑删除-->
    <update id="deleteById">
        update public.user_login
        <set>
            deleted = 1
        </set>
        where id = #{id}
    </update>

</mapper>

